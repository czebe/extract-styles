#!/usr/bin/env node
/* eslint-disable no-console */

import {listFiles, readFile} from './lib/io';
import {parse} from './lib/scssParser';
import defaults from 'defaults';
import _ from 'lodash';

const DEFAULT_TEMPLATE = `
/*
	File auto generated by 'npm run extract-styles'.
	Do not modify this file directly.
	To create a new theme, copy the 'default' theme and edit the newly created theme instead.
*/

.theme-default {
	<%= theme %>
}
`;

export const processFiles = async (options) => {

	options = defaults(options, {
		template: DEFAULT_TEMPLATE
	});

	const themes = await listFiles()
		.then((files) => {
			return files.map(async (result, file) => {
				const scss = await readFile(file);
				const parsedScss = parse(scss);
				return parsedScss;
			});
		});

	const compiled = _.template(options.template);
	Promise.all(themes)
		.then((t) => {
			const themeContent = compiled({theme: t.join('\n')});
			console.log(themeContent);
		});
};


processFiles();
